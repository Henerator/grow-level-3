Produce high-quiality code and solution:
  ✔ Can explain what is the code quality and how to measure it @done(21-03-08 22:51)
  ✔ Understands what is test pyramid and has basic knowledge of different testing types @done(21-03-09 21:45)
  ✔ Usage of automation code quality control tools (linters, tests, typescript, sonarqube, ...) @done(21-03-09 22:01)
    ✔ sonarqube @done(21-03-09 22:01)

Improve Knowledge of Software Development Methodologies:
  ✔ Knows best engineering practices, understands their pros and cons @done(21-03-20 17:44)
  ✔ At least basic knowledge of SDLC phases and models and understanding how SDLC is organized on current project @done(21-03-07 12:11)
  ✔ Scrum @done(21-03-07 12:10)
  ✔ Kanban @done(21-03-07 12:10)
  ✔ Waterfall @done(21-03-07 12:10)
  ✔ Agile @done(21-03-07 12:10)
  ✔ Lean @done(21-03-07 15:48)
  ✔ Extreme Programming Practices @done(21-03-08 22:27)
  ✔ Continous Integration, Continous Delivery, Continous Deployment @done(21-03-20 18:34)

Estimate some project parts:
  ✔ T-Shirt Size Estimation @done(21-03-08 10:24)
  ✔ Experts Estimations @done(21-03-08 11:04)
  ✔ Estimation by Analogy @done(21-03-08 10:24)
  ✔ Estimation by Decomposition (Bottom-up) @done(21-03-08 10:24)
  ☐ Estimation of Presales and Big Projects Parts
  ✔ Risks Estimation + Bug Fixing Time Planning @done(21-03-08 11:02)
  ✔ Three-Point Estimates + PERT @done(21-03-08 10:50)

Participate in Architectural decisions:
  ✔ MVC, MVVM, MV* @done(21-03-14 19:20)
  ✔ Redux and Flux @done(21-03-14 21:24)
  ✔ SOLID, KISS, DRY, YAGNI @done(21-03-14 23:58)
    ✔ SOLID @done(21-03-14 23:43)
    ✔ KISS @done(21-03-14 23:51)
    ✔ DRY @done(21-03-14 23:55)
    ✔ YAGNI @done(21-03-14 23:57)
  ✔ Dependency Injection @done(21-03-20 19:23)
  ☐ GOF Patterns (at least 10-12)

Study performance Analysis:
  ☐ Angular, React or other Framework Optimization Techniques
  ☐ JavaScript Performance Optimization Techniques
  ☐ Memory Leaks (detection tools and prevention)
  ☐ JavaScript Obfuscation and Minification
  ☐ Network Optimizations
  ☐ Repaint Re-flow Understanding
  ☐ Critical Rendering Path

Study and apply knowledge of:
  ✔ JavaScript Communication (XMLHttpRequest, WS, SSE, Pooling, ...) @done(21-03-08 11:05)
    ✔ Web Sockets @done(21-03-08 11:05)
    ✔ Server Side Events @done(21-03-08 11:05)
    ✔ Long Pooling @done(21-03-08 11:05)

JS engines:
  ✔ most popular (v8) @done(21-03-07 15:48)
  ✔ How it works @done(21-03-07 15:48)
